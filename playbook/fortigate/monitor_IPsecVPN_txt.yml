---
  - name: Fortigate IPsecVPN 목록 확인
    hosts: all
    vars_files:
      - ../../inventory/group_vars/fortigate.yml
    connection: httpapi
    gather_facts: no
    vars:
      folder: ipsecVPN_list
      file_name: "{{ lookup('pipe', 'date +%Y%m%d') }}_{{ inventory_hostname }}"

    collections:
      - fortinet.fortios

    tasks:
      - name: Get IPsec VPN tunnel list
        uri:
          url: "https://{{ ansible_host }}/api/v2/monitor/vpn/ipsec"
          method: GET
          headers:
            Authorization: "Bearer {{ fortios_access_token }}"
          validate_certs: no
          return_content: yes
        register: vpn_list
      
      # # command line으로 확인 시
      # - name: Print VPN tunnel result
      #   debug:
      #     var: vpn_list.json
      
      - name: Generate VPN list as fixed-width table string
        set_fact:
          vpn_txt_lines: |
            VPN Tunnel for {{ inventory_hostname }}
            ---------------------------------------------------------------
            {{ "%-20s %-9s %-17s %-15s %-15s" | format("NAME", "STATUS", "REMOTE-GW", "IN_BYTES", "OUT_BYTES") }}
            {% for vpn in vpn_list.json.results %}
            {% set status = vpn.proxyid[0].status if vpn.proxyid is defined and vpn.proxyid|length > 0 else '-' %}
            {{ "%-20s %-9s %-17s %-15s %-15s" | format(vpn.name, status, vpn.rgwy, vpn.incoming_bytes, vpn.outgoing_bytes) }}
            {% endfor %}

      - name: create directory for show vpn_list output
        file:
          path: "{{path}}/{{folder}}"
          state: directory

      - name: Save VPN list as TXT (table)
        copy:
          content: "{{ vpn_txt_lines | trim }}"
          dest: "{{ path }}/{{ folder }}/{{ file_name }}.txt"

# OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES ansible-playbook ./playbook/fortigate/monitor_IPsecVPN_txt.yml -i ./inventory/forti_hosts